# PostgreSQL Configuration for pg_cron and pg_partman

# Connection and Authentication
listen_addresses = '*'
port = 5432
max_connections = 200

# Memory settings (adjust based on available resources)
shared_buffers = 256MB
effective_cache_size = 1GB
work_mem = 4MB
maintenance_work_mem = 64MB

# pg_cron configuration
shared_preload_libraries = 'pg_cron'
# Note: cron.database_name will be set dynamically in docker-entrypoint.sh based on POSTGRES_DB
# cron.database_name = 'app_database' 
cron.log_statement = on # Enable logging for pg_cron jobs
cron.log_min_duration = 0
cron.max_running_jobs = 10

# WAL and Replication
wal_level = replica # logical is also an option if you need logical replication
max_wal_size = 2GB
min_wal_size = 512MB # Increased min_wal_size
archive_mode = on # Set to 'on' for production backups
archive_command = 'mkdir -p /archive && cp %p /archive/%f'  # Basic example, use pgbackrest or similar for production

# Logging
logging_collector = on
log_directory = 'log'
log_filename = 'postgresql-%Y-%m-%d_%H%M%S.log'
log_statement = 'ddl' # Log DDL statements, 'mod' can be too verbose
log_min_duration_statement = 250 # Log statements slower than 250ms
log_line_prefix = '%t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h '
log_checkpoints = on
log_connections = on
log_disconnections = on

# Performance
checkpoint_completion_target = 0.9
random_page_cost = 1.1
effective_io_concurrency = 200

# Autovacuum
autovacuum = on
autovacuum_max_workers = 3
autovacuum_naptime = 1min

# Timezone
timezone = 'UTC'
log_timezone = 'UTC'

# Locale
lc_messages = 'en_US.utf8'
lc_monetary = 'en_US.utf8'
lc_numeric = 'en_US.utf8'
lc_time = 'en_US.utf8'
default_text_search_config = 'pg_catalog.english'